version: 2.1
commands:  # commands that can be reused as needed in any job
  destroy_infrastructure: # command to destroy AWS green resources (in blue/green deployment startegy)
    steps:
      - run:
          name: Destroy Green Resources
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}


jobs:
  create_infrastructure:  # 1st build
    docker:
      - image: amazon/aws-cli  # image user=root, default working dir=/root/project 
    steps:
      - checkout  # check out source code to working directory
      - run:
          name: "Create Cloudformation Stack"
          command: |
            aws cloudformation deploy \
              --template-file cloudformation_template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
              --region ${AWS_DEFAULT_REGION}
      - run:
          name: get created ec2 instance public ip into inventory file
          command: |
            echo "[all]" > inventory  # add hosts group
            aws ec2 describe-instances  \
              --query 'Reservations[*].Instances[*].PublicIpAddress' \
              --output text >> inventory
            cat inventory  # just to verify
            mv inventory /tmp/inventory  # let save_dir == restore_dir
      - save_cache:
          key: instances-inventory
          paths:
            - /tmp/inventory

  configure_infrastructure:  # 2nd build
    docker:
      - image: circleci/python  # image user=circleci, default working dir=/home/circleci/project
    steps:
      - checkout  # check out source code to working directory
      - add_ssh_keys:  # using EC2 instance ssh key
          fingerprints:
            - "8c:ce:93:49:43:3e:24:b0:7d:4f:10:77:9f:c1:05:77"
      - run:
          name: Install Ansible
          command: |
            sudo apt update
            sudo apt install ansible
      - restore_cache:
          keys:
            - instances-inventory
      - run:
          name: Run Playbook and Configure server
          command: |
            sudo cp /tmp/inventory .  # restore the newly created inventory
            cat inventory
            ansible-playbook ansible-main.yml

  smoke_test: # 3rd build
    docker:
      # - image: alpine:latest
      - image: amazon/aws-cli
    steps:
      # - run: apk add --update curl
      - run:
          name: smoke test
          command: |
            # Test if website exists
            URL="localhost"
            if curl -s --head ${URL}
            then
              return 1
            else
              return 1
            fi
      - destroy_infrastructure

workflows:
  ci-cd-workflow:
    jobs:
      - create_infrastructure
      - configure_infrastructure:
          requires:
            - create_infrastructure
      - smoke_test:
          requires:
            - configure_infrastructure
